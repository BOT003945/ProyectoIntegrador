@*page "/citas/add"
@page "/citas/update/{id:int}"

<PageTitle>@(isUpdate ? $"Editar Cita[IdCita : {cita.IdCita}] " : "Agregar Cita")</PageTitle>
<h1>@(isUpdate ? $"Editar Cita[IdCita:{cita.IdCita}] " : "Agregar Cita")</h1>

<EditForm Model="@cita">
    <form class="container border" @onsubmit="Save">
        <!--ID del Servicio-->
        <div class="mb-2">
            <label class="form-label" for="IdServicio">Servicio</label>
            <InputSelect class="form-control" @bind-Value="@cita.IdServicio" >
                <option value="-1" disabled>Selecciona un servicio</option>
                @if (loading)
                {
                   <option value="0" disabled>Cargando...</option>
                }else if (servicios != null){
                @foreach(var servicio in servicios)
                {
                  <option value="@servicio.IdServicio">@servicio.NombreServicio</option>
                }
                }
            </InputSelect>
        </div>
       <!--Fecha de la cita-->
        <div class="mb-2">
            <label class="form-label" for="fecha">Fecha</label>
            <InputDate class="form-control" @bind-Value="@cita.Fecha" id="fecha"></InputDate>
        </div>
        <!--Descripción-->
        <div class="mb-2">
            <label class="form-label" for="descripcion">Descripción</label>
            <InputText class="form-control" @bind-Value="@cita.Descripcion" id="descripcion"></InputText>
        </div>
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-danger" href="/mascotas">Cancelar</a>
    </form>
</EditForm>

@using PetServiceBlazor.Data.Models
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient http
@inject NavigationManager NavigationManager

@code {
    [Parameter]
    public int id { get; set; }
    public bool isUpdate { get; set; } = false;

    bool loading = true;

    IList<Servicio>? servicios;
    IList<Mascota>? mascotas;
    IList<Usuario>? usuarios;
   
    Cita cita = new Cita();
    //protected override async Task OnInitializedAsync()
    //{
    //    mascotas = await http.GetFromJsonAsync<IList<Mascota>>("api/Mascotas");
    //    isUpdate = id != 0;
    //    if (isUpdate)
    //    {
    //        var response = await http.GetFromJsonAsync<Cita>($"api/Citas/{id}");
    //        if(response != null)
    //        {
    //            cita = response;
    //        }
    //    }
    //    loading = false;
    //}  
    protected override async Task OnInitializedAsync()
    {
        servicios = await http.GetFromJsonAsync<IList<Servicio>>("api/Servicios");
        isUpdate = id != 0;
        if (isUpdate)
        {
            var response = await http.GetFromJsonAsync<Cita>($"api/Citas/{id}");
            if(response != null)
            {
                cita = response;
            }
        }
        loading = false;
    }    
    //protected override async Task OnInitializedAsync()
    //{
    //    usuarios = await http.GetFromJsonAsync<IList<Usuario>>("api/Usuarios");
    //    isUpdate = id != 0;
    //    if (isUpdate)
    //    {
    //        var response = await http.GetFromJsonAsync<Cita>($"api/Citas/{id}");
    //        if(response != null)
    //        {
    //            cita = response;
    //        }
    //    }
    //    loading = false;
    //}                   
             
    protected async Task Save()
    {
        HttpResponseMessage? response;
        if (isUpdate)
        {
            response = await http.PutAsJsonAsync<Cita>($"api/Citas/{id}", cita!);
        }
        else
        {
            response = await http.PostAsJsonAsync<Cita>("api/Citas", cita!);
        }
        Cita? saved = response.Content.ReadFromJsonAsync<Cita>().Result;
        NavigationManager.NavigateTo("/citas");
    }
}*@
