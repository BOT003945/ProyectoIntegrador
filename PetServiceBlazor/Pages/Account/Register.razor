@page "/account/registro"

@using PetServiceBlazor.Data.Models
@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage BrowserStorage
@inject NavigationManager NavigationManager
@inject HttpClient http

<div class="card">
    <h4 class="card-header">Registro</h4>
    <div class="card-body">
        <EditForm Model="@model">
            <form @onsubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Nombre</label>
                    <InputText @bind-Value="model.Nombres" class="form-control" />
                    @* <ValidationMessage For="@(() => model.Name)" /> *@
                </div>
                <div class="form-group">
                    <label>Apellido Paterno</label>
                    <InputText @bind-Value="model.ApellidoP" class="form-control" />
                    @* <ValidationMessage For="@(() => model.LastName)" /> *@
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="model.Correo" class="form-control" />
                    @* <ValidationMessage For="@(() => model.Email)" /> *@
                </div>
                <div class="form-group">
                    <label>Contraseña</label>
                    <InputText @bind-Value="model.Contra" type="password" class="form-control" />
                    @* <ValidationMessage For="@(() => model.Password)" /> *@
                </div>
                <button disabled="@loading" class="btn btn-primary">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Register
                </button>
                <NavLink href="/login" class="btn btn-link">Cancel</NavLink>
            </form>
        </EditForm>
    </div>
</div>

@code {
    private Usuarios model = new Usuarios();
    private bool loading;

    private async void OnValidSubmit()
    {
        // reset alerts on submit
      
    
        
        loading = true;
        try
        {
            var response = await http.PostAsJsonAsync<Usuarios>($"api/Usuarios", model!);
            if (response.IsSuccessStatusCode){
                var auth = response.Content.ReadFromJsonAsync<AuthResponse>().Result;
                await BrowserStorage.SetAsync("token", auth!.JWTToken);
            }
            NavigationManager.NavigateTo("/login");
        }
        catch (Exception)
        {
          
            loading = false;
            StateHasChanged();
        }
    }
}