@page "/propietarios/add"
@page "/propietarios/update/{id:int}"

<PageTitle>@(isUpdate ? $"Editar propietario[IdPropietario : {propietario.IdPropietario}] " : "Agregar propietario")</PageTitle>
<h1>@(isUpdate ? $"Editar Mascota[IdPropietario:{propietario.IdPropietario}] " : "Agregar propietario")</h1>

<EditForm Model="@propietario">
    <form class="container border" @onsubmit="Save">
        <!--Nombre de la mascota-->
        <div class="mb-2">
            <label class="form-label" for="name">Nombre</label>
            <InputText class="form-control" @bind-Value="@propietario.Nombres" id="nombre"></InputText>
        </div>
        <!--Sexo de la mascota-->
        <div class="mb-2">
            <label class="form-label" for="sexo">Sexo</label>
            <InputText class="form-control" @bind-Value="@propietario.Sexo" id="sexo"></InputText>
        </div>
        <!--Fecha de nacimiento-->
        <div class="mb-2">
            <label class="form-label" for="fechanacimiento">Fecha de Nacimiento</label>
            <InputDate class="form-control" @bind-Value="@propietario.FechaNacimiento" id="fechanacimiento"></InputDate>
        </div>
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-danger" href="/propietarios">Cancelar</a>
    </form>
</EditForm>

@using PetServiceBlazor.Data.Models
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient http
@inject NavigationManager NavigationManager

@code {
    [Parameter]
    public int id { get; set; }
    public bool isUpdate { get; set; } = false;

    bool loading = true;

    //IList<Propietario>? propietarios;

    Propietario propietario = new Propietario();

    //protected override async Task OnInitializedAsync()
    //{
    //    propietarios = await http.GetFromJsonAsync<IList<Propietario>>("api/Propietarios");
    //    isUpdate = id != 0;
    //    if (isUpdate)
    //    {
    //        var response = await http.GetFromJsonAsync<Mascota>($"api/Mascotas/{id}");
    //        if(response != null)
    //        {
    //            mascota = response;
    //        }
    //    }
    //    loading = false;
    //}                   
    protected async Task Save()
    {
        HttpResponseMessage? response;
        if (isUpdate)
        {
            response = await http.PutAsJsonAsync<Propietario>($"api/Propietarios/{id}", propietario!);
        }
        else
        {
            response = await http.PostAsJsonAsync<Propietario>("api/Propietarios", propietario!);
        }
        Propietario? saved = response.Content.ReadFromJsonAsync<Propietario>().Result;
        NavigationManager.NavigateTo("/propietarios");
    }
}
